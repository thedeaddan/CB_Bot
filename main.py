from settings import BOT_TOKEN, BOT_NAME

from telebot import TeleBot, types
from collections import namedtuple
from re import findall, match
from requests import get
from bs4 import BeautifulSoup as bs
from time import strftime, localtime,sleep

import threading

bot = TeleBot(BOT_TOKEN, parse_mode='html')
name = BOT_NAME
hours_await = 20

active = [] #–ú–∞—Å—Å–∏–≤ USERID –∫–æ—Ç–æ—Ä—ã–º –¥–æ–ª–∂–Ω–∞ –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫–∞

data = {
    'start': f'–ü—Ä–∏–≤–µ—Ç! –ë–æ—Ç <b>{name}</b> –¥–µ–ª–∏—Ç—Å—è —Å –≤–∞–º–∏ –∏–∑–º–µ–Ω–µ–Ω–µ–º –∫—É—Ä—Å–∞ –ï–≤—Ä–æ –∏ –î–æ–ª–ª–∞—Ä–∞ —Å <b>—Å–∞–π—Ç–∞ –¶–ë</b>.\n\n'
             f'–ù–∞–ø–∏—à–∏—Ç–µ <b>/go</b> —á—Ç–æ–± –Ω–∞—á–∞—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ',
    "go": f"–ù–∞—á–∏–Ω–∞—é –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –¥–ª—è –≤–∞—Å –∫—É—Ä—Å –≤–∞–ª—é—Ç—ã, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ <b>/stop</b> —á—Ç–æ–± –æ—Ç–∫–ª—é—á–∏—Ç—å –±–æ—Ç–∞",
    "stop": "–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–µ–∫—Ä–∞—â–µ–Ω–æ",
    "error": "–ù–µ –Ω–∞–¥–æ –ø–∏—Å–∞—Ç—å –º–Ω–µ –æ–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç, –Ω–∞–ø–∏—à–∏—Ç–µ <b>/help</b> –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥",
    "help": "<b>start</b> - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n<b>go</b> - –Ω–∞—á–∞—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤–∞–ª—é—Ç\n<b>stop</b> - –ø—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞",
    "time": "–°–≤–æ–¥–∫–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:"
}



def get_currency():
    while True:
        global last_curr
        last_curr = []
        euro = []
        dollar = []
        global history
        history = []
        hour = int(strftime("%H", localtime()))
        if hour >= 15 and hour <= 18:
            day, month, year = strftime("%d %m %Y", localtime()).split()
            for i in range(0,2):
                if i == 1:
                    day = str(int(day)+1)
                for actual_currency in ["–ï–≤—Ä–æ", "–î–æ–ª–ª–∞—Ä –°–®–ê"]:
                    url = f'https://cbr.ru/scripts/XML_daily.asp?date_req={day}/{month}/{year}'

                    request = get(url)
                    soup = bs(request.text, 'lxml')

                    for tag in soup.findAll('valute'):
                        result = tag.get_text(strip=True)
                        name_of_currency = ' '.join(findall(r'[–∞-—è–ê-—è]+', result))

                        numbers = findall(r'[0-9]+', result)
                        price = (f'{numbers[-2]}.{numbers[-1]}')
                        if actual_currency in name_of_currency:
                            if actual_currency == "–ï–≤—Ä–æ":
                                euro.append(price)
                            else:
                                dollar.append(price)

            dollar_new = float('{:.5f}'.format(float(dollar[1])-float(dollar[0])))
            euro_new = float('{:.5f}'.format(float(euro[1])-float(euro[0])))

            if dollar_new == 0.0 and euro_new == 0:
                sleep(60)
            else:
                if dollar_new > 0:
                    dl_message = f"üíµ\nüìà–î–æ–ª–ª–∞—Ä —É–≤–µ–ª–∏—á–∏–ª—Å—è –Ω–∞ {dollar_new}‚ÇΩ"
                else:
                    dl_message = f"üíµ\nüìâ–î–æ–ª–ª–∞—Ä —É–º–µ–Ω—å—à–∏–ª—Å—è –Ω–∞ {dollar_new}‚ÇΩ"
                if euro_new > 0:
                    er_message = f"üí∂\nüìà–ï–≤—Ä–æ —É–≤–µ–ª–∏—á–∏–ª–æ—Å—å –Ω–∞ {euro_new}‚ÇΩ"
                else:
                    er_message = f"üí∂\nüìâ–ï–≤—Ä–æ —É–º–µ–Ω—å—à–∏–ª–æ—Å—å –Ω–∞ {euro_new}‚ÇΩ"
                message_dollar = f"{dl_message}\n–ö—É—Ä—Å –î–æ–ª–ª–∞—Ä–∞ –Ω–∞ –°–µ–≥–æ–¥–Ω—è : {dollar[0]}‚ÇΩ\n–ö—É—Ä—Å –î–æ–ª–ª–∞—Ä–∞ –Ω–∞ –ó–∞–≤—Ç—Ä–∞: {dollar[1]}‚ÇΩ"
                message_euro = f"{er_message}\n–ö—É—Ä—Å –ï–≤—Ä–æ –Ω–∞ –°–µ–≥–æ–¥–Ω—è : {euro[0]}‚ÇΩ\n–ö—É—Ä—Å –ï–≤—Ä–æ –Ω–∞ –ó–∞–≤—Ç—Ä–∞: {euro[1]}‚ÇΩ"

                history = ["–°–≤–æ–¥–∫–∞ –ø–æ –∫—É—Ä—Å—É:",message_dollar,message_euro]
                for user_id in active:
                    bot.send_message(user_id,"–°–≤–æ–¥–∫–∞ –ø–æ –∫—É—Ä—Å—É:")
                    bot.send_message(user_id,message_dollar)
                    bot.send_message(user_id,message_euro)

                sleep(hours_await*60*60)
        else:
            sleep(60)
        sleep(1)



threading.Thread(target = get_currency).start()
@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, data['start'])

def info(message):
    bot.send_message(message.chat.id, data['time'])
    sleep(2)
    if history == []:
        bot.send_message(message.chat.id, "–°–≤–æ–¥–∫–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –µ—â—ë –ø—É—Å—Ç–∞—è")
    else:
        for i in history:
            bot.send_message(message.chat.id, i)

@bot.message_handler(commands=['info'])
def info_message(message):
    info(message)


@bot.message_handler(commands=['go'])
def go(message):
    bot.send_message(message.chat.id, data['go'])
    if message.chat.id in active:
        bot.send_message(message.chat.id,"–í—ã —É–∂–µ –ø–æ–¥–∫–ª—é—á–∏–ª–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å —Å–≤–æ–¥–∫—É –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /info")
    else:
        active.append(message.chat.id)
        print(f"–Æ–∑–µ—Ä {message.chat.id} –ø–æ–¥–∫–ª—é—á–∏–ª –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ")
        hour = int(strftime("%H", localtime()))
        if hour <= 11 or hour >= 16:
            info(message)

@bot.message_handler(commands=['stop'])
def stop(message):
    bot.send_message(message.chat.id, data['stop'])
    active.remove(message.chat.id)

@bot.message_handler(commands=['help'])
def help(message):
    bot.send_message(message.chat.id, data['help'])




@bot.message_handler(content_types='text')
def reply(message):
    bot.send_message(message.chat.id, data['error'])

bot.polling(non_stop=True)
